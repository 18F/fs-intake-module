pipeline {
    agent {
    node {
    label 'linuxworker1'
        }
    }  

    options {
        timestamps()
        disableConcurrentBuilds()
        ansiColor('xterm')
        buildDiscarder(logRotator(numToKeepStr: '3'))
    }  

  stages {     


    stage('Checkout from SCM'){
       steps {    
       
       
                script {
                    currentBuild.displayName = "#$BUILD_NUMBER fs-open-forest-platform Deploy"
                    currentBuild.description = "fs-open-forest-platform Deploy"          
                }

             
               checkout([$class: 'GitSCM', branches: [[name: '*/dev']], doGenerateSubmoduleConfigurations: false, extensions: [], gitTool: 'GIT', submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'a2771711-7381-4f18-8d28-1d1dfec426c3', url: 'https://github.com/USDAForestService/fs-open-forest-platform.git']]])
            }
    }

    stage('Security Scanning'){
    steps {

    script {

        def scannerhome = tool 'SonarQubeScanner';

        withSonarQubeEnv('SonarQube') {      		
        sh label: '', script: '''/home/Jenkins/.dotnet/tools/dotnet-sonarscanner begin /k:"fs-open-forest-platform" /d:sonar.login=686109daf6b0ac668b501a65556918f2803a3aa0 /d:sonar.sources=. /v:1.0'''
      
          sh 'sleep 180'
      	  sh 'rm -rf sonarqubereports'
          sh 'mkdir sonarqubereports'
          sh 'java -jar /home/Jenkins/sonar-cnes-report-3.1.0.jar -t 309e68d4284f8cc7b120289544d87ebcc76f09ae -s http://10.0.0.117:9090 -p fs-open-forest-platform -o sonarqubereports'
          sh 'cp sonarqubereports/*analysis-report.docx sonarqubereports/sonarqubeanalysisreport.docx'
          sh 'cp sonarqubereports/*issues-report.xlsx sonarqubereports/sonarqubeissuesreport.xlsx'
	  publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '', reportFiles: 'sonarqubereports/sonarqubeanalysisreport.docx', reportName: 'SonarQube Analysis Report (Word)', reportTitles: 'SonarQube Analysis Report'])
          publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '', reportFiles: 'sonarqubereports/sonarqubeissuesreport.xlsx', reportName: 'SonarQube Issues Report (Excel)', reportTitles: 'SonarQube Issues Report'])
	  
	  
        }
        }
        }
    }


stage('Notification'){
    steps {
        emailext attachLog: true, attachmentsPattern: 'sonarqubereports/sonarqubeanalysisreport.docx,sonarqubereports/sonarqubeissuesreport.xlsx,pa11y/index.html', body: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS: Check console output at $BUILD_URL to view the results.', replyTo: 'notifications@techtrend.us', subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!', to: 'ikumarasamy@techtrend.us'
        }
    }    

  }
}
