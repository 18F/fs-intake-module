# Use node 8.11.3 as the base image
FROM circleci/node:8.11.3
USER root

RUN sudo apt-get update \
    && sudo apt-get install lsb-release libappindicator3-1 curl libasound2 libnspr4 libnss3 libxss1 xdg-utils fonts-liberation \
    && sudo curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && sudo dpkg -i google-chrome.deb \
    && sudo sed -i 's|HERE/chrome"|HERE/chrome" --no-sandbox|g' /opt/google/chrome/google-chrome \
    && sudo rm google-chrome.deb

RUN google-chrome --version 


# create a top level node directory and copy the frontend package.json
# into it
# set the work dir to /node
WORKDIR /usr/src/app
COPY ./frontend/package*.json ./
COPY ./frontend .


# run npm to get all dependencies
RUN npm install


# set the workdir as the /app directory
# this dir is mapped to the frontend directory in the cloned repo
WORKDIR /app

# Make port 4200 available to the world outside this container
EXPOSE 4200

# # create a symlink to the new node_modules in the app dir
# # so that angular can find the node modules
# # angular-cli won't use the NODE_PATH for node package lookup
# # https://github.com/angular/angular-cli/issues/3864
# RUN sudo ln -s /node/node_modules /app/node_modules

# startup the angular server when the container launches
# ensure a host of 0.0.0.0 so that port forwarding works correctly
CMD ["/app/node_modules/.bin/ng", "serve", "--host", "0.0.0.0"]
